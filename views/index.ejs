<!DOCTYPE html>
<head>
  <%- include ('./partials/head') %>
  <title>Covid19 Sentiment Analysis</title>
  <style>
    .section {
      box-shadow: 0px 3px 5px 2px #888888;
      padding: 10px 15px;
      margin: 15px 30px;
      display: inline-block;
      border-radius: 5px;
    }
    .label {
      font-family: "Open Sans", sans-serif;
      font-weight: 400;
      margin: 10px 30px;
    }
    .bigNumber {
      font-family: "Open Sans", sans-serif;
      font-size: 4em;
      display: inline;
      margin: 0px;
    }
    .chart{
      display: inline-block;
    }
    .smalltext {
      margin: 0;
      display: inline;
      font-family: "Open Sans", sans-serif;
      font-weight: 400;
    }
    .breakdown td {
      vertical-align: center;
    }
    .material-icons {
      font-size: 35px;
      position: relative;
      top: 6px;
      color: black;
    }
    .desc {
      font-family: "Open Sans", sans-serif;
    }
    td {
    }
  </style>
</head>
<body>
  <%- include ('./partials/header') %>
  <div style="width: 90%; margin: 0 auto;">
  <div style = "display: inline-block; float: left;">
  <div id = "overallSection" class = "section">
    <h1 class = "label">Overall Sentiment</h1>
    <table>
      <tr>
        <td>
    <div id='overallSentiment' class = "chart"></div>
  </td>
  <td>
    <div class = "desc">
      <h1 class = "bigNumber"><%= data.overall %></h1><h1 class = "smalltext"></h1></br>
      <h1 class = "smalltext" id = "overallDesc"></h1>
    </div>
  </tr>
</table>
  </div>
  <div id = "breakdownSection" class = "section">
    <h1 class = "label">Overall Sentiment Breakdown</h1>
    <table>
      <tr>
        <td>
    <div id='breakdown' class = "chart"></div>
  </td>
  <td>
    <div class = "desc">
      <table>
        <tr>
          <td>
            <h1 class = "smalltext" style = "color: green"><i class="material-icons">sentiment_very_satisfied</i> Positive: <%= data.breakdown[0] %>%</h1>
          </td>
        </tr>
          <tr>
            <td><h1 class = "smalltext" style = "color: #e6ac00"><i class="material-icons">  sentiment_satisfied</i> Neutral: <%= data.breakdown[1] %>%</h1>
            </td>
          </tr>
            <tr>
              <td><h1 class = "smalltext" style = "color: orangered"><i class="material-icons">sentiment_very_dissatisfied</i> Negative: <%= data.breakdown[2] %>%</h1>
              </td>
            </tr>
      </table>
    </div>
  </tr>
  </table>
  </div>
</br>
<div class = "section">
  <h1 class = "label">Timeline</h1>
  <div id = "timelineChart"></div>
</div>
</div>
  <div id = "sectorSection" class = "section" style="max-width: 35%">
    <h1 class = "label">Breakdown by Sector</h1>
    <table>
      <tr>
        <td>
          <div class = "desc">
            <table>
              <tr>
                <td colspan="2">
                    <h1 class = "label" style="font-weight: bold"><i class="material-icons" style="color: crimson">local_hospital</i> Healthcare</h1>
                </td>
              </tr>
              <tr>
                <td style="display: inline-block;">
                  <h2 style="margin-left: 30px;"class = "bigNumber"><%= data.healthcare.overall %></h2><h2 class = "smalltext"></h2></br>
                  <h1 style="margin-left: 30px;" class = "smalltext" id = "healthcareOverall"></h1>
                </td>
                <td>
                  <div id = "healthcareBreakdownChart" class = "chart"></div>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                    <h1 class = "label" style="font-weight: bold"><i class="material-icons" style="color: orange">monetization_on</i> Manpower </h1>
                </td>
              </tr>
              <tr>
                <td style="display: inline-block;">
                  <h2 style="margin-left: 30px;"class = "bigNumber"><%= data.manpower.overall %></h2><h2 class = "smalltext"></h2></br>
                  <h1 style="margin-left: 30px;" class = "smalltext" id = "manpowerOverall"></h1>
                </td>
                <td>
                  <div id = "manpowerBreakdownChart" class = "chart"></div>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                    <h1 class = "label" style="font-weight: bold"><i class="material-icons" style="color: black">school</i> Education</h1>
                </td>
              </tr>
              <tr>
                <td style="display: inline-block;">
                  <h2 style="margin-left: 30px;"class = "bigNumber"><%= data.education.overall %></h2><h2 class = "smalltext"></h2></br>
                  <h1 style="margin-left: 30px;" class = "smalltext" id = "educationOverall"></h1>
                </td>
                <td>
                  <div id = "educationBreakdownChart" class = "chart"></div>
                </td>
              </tr>
            </table>
          </div>
        </td>
        </tr>
      </table>
    </div>
  </div>
  <script>
  (function(){
    fetch("https://pomber.github.io/covid19/timeseries.json")
    .then(response => response.json())
    .then(data => {
      var dates = [];
      var lastFiveDays = [];
      var i = data["Singapore"].length - 1;
      while (data["Singapore"][i]["date"] != '2020-3-17') {
        lastFiveDays.push(data["Singapore"][i]["confirmed"]);
        dates.push(data["Singapore"][i]["date"]);
        i--;
      }
      lastFiveDays.reverse();
      dates.reverse();
      /**
        for (var i = len - 5; i < len; i++) {
          lastFiveDays.push(data["Singapore"][i]["confirmed"]);
          dates.push(data["Singapore"][i]["date"]);
        }**/
        const timelineConfig = {
          type: 'mixed',

 scaleX: {
   labels: dates // one label for every datapoint
 },
 scaleY: {
   guide: { // dashed lines
     visible: false
   },
   label: {
     text: 'Total Cases',
     fontSize: '14px'
   }
 },
 scaleY2: {
   guide: {
     visible: false
   },
   label: {
     text: 'Sentiment',
     fontSize: '14px'
   },
   maxValue: 1,
   minValue: -1,
 },
 series: [
   {
     type: 'bar',
     text: 'Sentiment',
     values: [-0.2, -0.3, -0.8, -0.4, -0.4],
     backgroundColor: '#ffa726',
     scales: 'scale-x, scale-y-2',
     "bar-width": "50"
   },
   {
     type: 'line',
     text: 'Total Cases',
     values: lastFiveDays,
     lineColor: '#42a5f5',
     marker: {
       backgroundColor:"#333"

     },
     scales: 'scale-x, scale-y'
   }

 ]
        }
        zingchart.render({
          id : 'timelineChart',
          data : timelineConfig,
          width: 1060,
          height: 300
        });
    })
      var level = document.getElementById("overallDesc");
      if (<%= data.overall %> < -0.3) {
        level.innerHTML = "Negative";
        level.style.color = "orangered"
      } else if (<%= data.overall %> > 0.3) {
        level.innerHTML = "Positive";
        level.style.color = "green";
      } else {
        level.innerHTML = "Neutral";
        level.style.color = "#e6ac00";
      }

      var healthLevel = document.getElementById("healthcareOverall");
      if (<%= data.healthcare.overall %> < -0.3) {
        healthLevel.innerHTML = "Negative";
        healthLevel.style.color = "orangered"
      } else if (<%= data.healthcare.overall %> > 0.3) {
        healthLevel.innerHTML = "Positive";
        healthLevel.style.color = "green";
      } else {
        healthLevel.innerHTML = "Neutral";
        healthLevel.style.color = "#e6ac00";
      }
      var manpowerLevel = document.getElementById("manpowerOverall");
      if (<%= data.manpower.overall %> < -0.3) {
        manpowerLevel.innerHTML = "Negative";
        manpowerLevel.style.color = "orangered"
      } else if (<%= data.manpower.overall %> > 0.3) {
        manpowerLevel.innerHTML = "Positive";
        manpowerLevel.style.color = "green";
      } else {
        manpowerLevel.innerHTML = "Neutral";
        manpowerLevel.style.color = "#e6ac00";
      }
      var educationLevel = document.getElementById("educationOverall");
      if (<%= data.education.overall %> < -0.3) {
        educationLevel.innerHTML = "Negative";
        educationLevel.style.color = "orangered"
      } else if (<%= data.education.overall %> > 0.3) {
        educationLevel.innerHTML = "Positive";
        educationLevel.style.color = "green";
      } else {
        educationLevel.innerHTML = "Neutral";
        educationLevel.style.color = "#e6ac00";
      }
    })();
    const overallConfig = {
      type: 'gauge',
      "plotarea":{
        "y": 60
   },
      scale: {
        'size-factor': 1.4
      },
      'scale-r': {
        aperture: 200,
        values: "-1:1:0.1",
        center: {
          visible: false
        },
        ring: {
          size: 10,
          rules: [
            {
              rule: "%v < -0.3",
              'background-color': "orangered"
            }, {
              rule: "%v >= -0.3 && %v <= 0.3",
              'background-color': "#e6ac00"
            }, {
              rule: "%v >= 0.3 && %v <= 1.0",
              'background-color': 'green'
            }
          ]
        }
      },
      plot: {
        csize: "5%",
        size: "80%",
        'background-color': "#000000",
        'value-box': { //Value Boxes
          placement: "center",  //Specify placement at "center", "tip", or "edge".
          visible: false,
          text: "%v",
          fontSize: 25,
          'font-color': "black",
          rules: [
            {
              rule: "%v < -0.3",
              text: "%v<br>Negative",
              'font-color': 'orangered'
            }, {
              rule: "%v >= -0.3 && %v <= 0.3",
              text: "%v<br>Neutral",
              'font-color': '#e6ac00'
            },{
              rule: "%v > 0.3",
              text: "%v<br>Positive",
              'font-color': 'green'
            },
          ]
        }
      },
      series: [{
        values: [<%= data.overall %>],
        indicator: [3, 0, 0, 0, 0],
        "csize": "5"
      }]
    }
    const breakdownConfig = {
  type: "ring",
  "plotarea" : {
    "y" : 20
  },
  plot: {
    slice: 0.7,
    'value-box': {
      visible: false
    }
  },
  series: [
    {
      values: [<%= data.breakdown[2] %>], //negative
      'background-color': 'orangered'
    }, {
      values: [<%= data.breakdown[1] %>], //neutral
      'background-color': '#e6ac00'
    }, {
      values: [<%= data.breakdown[0] %>], //good
      'background-color': 'green'
    }

  ]
}

const healthcareBreakdownConfig = {
type: "ring",
"plotarea" : {
"x" : 10,
"y" : 0,
"margin": 0
},
plot: {
'slice': 0.7,
'value-box': {
  visible: false
}
},
series: [
{
  values: [<%= data.healthcare.breakdown[2] %>], //negative
  'background-color': 'orangered'
}, {
  values: [<%= data.healthcare.breakdown[1] %>], //neutral
  'background-color': '#e6ac00'
}, {
  values: [<%= data.healthcare.breakdown[0] %>], //good
  'background-color': 'green'
}

]
}
const manpowerBreakdownConfig = {
type: "ring",
"plotarea" : {
"x" : 10,
"y" : 0,
"margin": 0
},
plot: {
'slice': 0.7,
'value-box': {
  visible: false
}
},
series: [
{
  values: [<%= data.manpower.breakdown[2] %>], //negative
  'background-color': 'orangered'
}, {
  values: [<%= data.manpower.breakdown[1] %>], //neutral
  'background-color': '#e6ac00'
}, {
  values: [<%= data.manpower.breakdown[0] %>], //good
  'background-color': 'green'
}

]
}
const educationBreakdownConfig = {
type: "ring",
"plotarea" : {
"x" : 10,
"y" : 0,
"margin": 0
},
plot: {
'slice': 0.7,
'value-box': {
  visible: false
}
},
series: [
{
  values: [<%= data.education.breakdown[2] %>], //negative
  'background-color': 'orangered'
}, {
  values: [<%= data.education.breakdown[1] %>], //neutral
  'background-color': '#e6ac00'
}, {
  values: [<%= data.education.breakdown[0] %>], //good
  'background-color': 'green'
}

]
}
  zingchart.render({
	      id : 'overallSentiment',
	      data : overallConfig,
        width: 300,
        height: 200,
  });
  zingchart.render({
      id : 'breakdown',
      data : breakdownConfig,
      width: 180,
      height: 200
  });
  zingchart.render({
      id : 'healthcareBreakdownChart',
      data : healthcareBreakdownConfig,
      width: 150,
      height: 130
  });
  zingchart.render({
      id : 'manpowerBreakdownChart',
      data : manpowerBreakdownConfig,
      width: 150,
      height: 130
  });
  zingchart.render({
      id : 'educationBreakdownChart',
      data : educationBreakdownConfig,
      width: 150,
      height: 130
  });
  </script>
</body>
